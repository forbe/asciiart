// Copyright (c) 2016 Frank Braun <frank@cryptogroup.net>
// Use of this source code is governed by an ISC
// license that can be found in the LICENSE file.

package svg

import (
	"bytes"
	"testing"

	"github.com/frankbraun/asciiart/aa2d"
	"github.com/stretchr/testify/assert"
)

type vector struct {
	aa  string // ASCII art
	svg string // resulting SVG
}

func testVectors() []vector {
	return []vector{
		{
			aa: `
#-----#
|     |
|     |
#-----#
`,
			svg: `<?xml version="1.0"?>
<!-- Generated by SVGo -->
<svg width="63" height="96"
     xmlns="http://www.w3.org/2000/svg"
     xmlns:xlink="http://www.w3.org/1999/xlink">
<rect x="0" y="16" width="63" height="64" fill="none" stroke="black" />
</svg>
`,
		},
	}
}

func TestGenerate(t *testing.T) {
	p := aa2d.NewParser()
	for _, vector := range testVectors() {
		g, err := p.Parse(vector.aa)
		assert.NoError(t, err)
		var svg bytes.Buffer
		err = Generate(&svg, g)
		assert.NoError(t, err)
		assert.Equal(t, vector.svg, svg.String())
	}
}
